Relatório do Trabalho Final - Lab de Arch 2 - 2015

Thiago Miranda RA 379824

Objetivos:

Implementar o algoritmo fornecido em diferentes linguagens e tentar otimiza-lo.
Comparar os tempos de execução nas diferenas implementações e a influencia das otimizações dos compiladores.
Implementar uma versão 'interativa' com GUI.


Sobre as diferentes implementações:

- Vanilla é a implementação original. 

Cpp Improved contém uma versão modificada do algoritmo original. Principais modificações:
- O programa utiliza streams para fazer o IO
- O programa aloca memória para a imagem, invés de acessar o disco para cada 'setColor'
- Somente depois de ter feito todas modificações necessárias a imagem é escrita em disco.
- Constantes e streams foram declaradas como globais.

CSharp é a implementação do algoritmo em C#. O código é otimizado duas vezes. Primeiro na tradução de C# para IL, e depois na tradução do IL pelo JIT Compiler.
As principais modificações dessa versão foram:
- A criação de classes para lidar com a imagem e o formato .pnm
- Uso de estruturas que possibilitam (mas não garantem) a paralelização de granularidade-grossa trechos do código

Zooming é a implementação interativa / com GUI do algoritmo CSharp. Principais modificações:
- Uma gui
- Mudança do esquema de cores Windows 98 para vermelho e preto
- Utilização do formato Bitmap 32bpp
- Controle do máximo de iterações

Cada um dos projetos foi compilado com diferentes parametros, e então 'timed' usando o commando Measure-Command da Powershell do Windows.
Os tempos das implementações com arquitetura alvo 32 bits estão no arquivo "Tempos 32".
Os tempos das implementações com arquitetura alvo 64 bits estão no arquivo "Tempos 64".
Gráficos foram feitos usando esses valores, arredondados para baixo.












 
